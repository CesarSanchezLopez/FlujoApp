// <auto-generated />
using System;
using FlujoApp.Api.Infraestructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FlujoApp.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250503203628_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FlujoApp.Api.Core.Entities.Campo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("PasoId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Requerido")
                        .HasColumnType("boolean");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PasoId");

                    b.ToTable("Campos", (string)null);
                });

            modelBuilder.Entity("FlujoApp.Api.Core.Entities.Flujo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Flujos", (string)null);
                });

            modelBuilder.Entity("FlujoApp.Api.Core.Entities.Paso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("FlujoId")
                        .HasColumnType("uuid");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Orden")
                        .HasColumnType("integer");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FlujoId");

                    b.ToTable("Pasos", (string)null);
                });

            modelBuilder.Entity("FlujoApp.Api.Core.Entities.PasoDependencia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("DependeDePasoId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PasoId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("DependeDePasoId");

                    b.HasIndex("PasoId");

                    b.ToTable("PasoDependencias", (string)null);
                });

            modelBuilder.Entity("FlujoApp.Api.Core.Entities.Campo", b =>
                {
                    b.HasOne("FlujoApp.Api.Core.Entities.Paso", "Paso")
                        .WithMany("Campos")
                        .HasForeignKey("PasoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paso");
                });

            modelBuilder.Entity("FlujoApp.Api.Core.Entities.Paso", b =>
                {
                    b.HasOne("FlujoApp.Api.Core.Entities.Flujo", "Flujo")
                        .WithMany("Pasos")
                        .HasForeignKey("FlujoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flujo");
                });

            modelBuilder.Entity("FlujoApp.Api.Core.Entities.PasoDependencia", b =>
                {
                    b.HasOne("FlujoApp.Api.Core.Entities.Paso", null)
                        .WithMany()
                        .HasForeignKey("DependeDePasoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FlujoApp.Api.Core.Entities.Paso", "Paso")
                        .WithMany("Dependencias")
                        .HasForeignKey("PasoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paso");
                });

            modelBuilder.Entity("FlujoApp.Api.Core.Entities.Flujo", b =>
                {
                    b.Navigation("Pasos");
                });

            modelBuilder.Entity("FlujoApp.Api.Core.Entities.Paso", b =>
                {
                    b.Navigation("Campos");

                    b.Navigation("Dependencias");
                });
#pragma warning restore 612, 618
        }
    }
}
